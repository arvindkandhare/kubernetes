# output messages into a rolling log file
log4j.rootLogger=INFO,R,E

# set at WARN to filter out user level exception msgs
log4j.logger.org.apache.zookeeper=WARN

# no perf4j log
log4j.logger.org.perf4j.TimingLogger=ERROR

# uncomment to get performance log
log4j.logger.com.emc.storageos.objcontrol.object.shared.PerformanceCounter=DEBUG,P
log4j.additivity.com.emc.storageos.objcontrol.object.shared.PerformanceCounter=false

# rolling log file
log4j.appender.R=org.apache.log4j.rolling.RollingFileAppender
log4j.appender.R.layout=com.netflix.logging.log4jAdapter.NFPatternLayout
log4j.appender.R.layout.ConversionPattern=%d{ISO8601} [%t] %5p  %F (line %L) %m%n

# triggering policy
log4j.appender.R.TriggeringPolicy=org.apache.log4j.rolling.SizeBasedTriggeringPolicy
# max file size is set to 50MB
log4j.appender.R.TriggeringPolicy.MaxFileSize=52428800

# rolling policy
log4j.appender.R.RollingPolicy=com.emc.storageos.management.jmx.logging.TimeWindowRollingPolicy
log4j.appender.R.RollingPolicy.ActiveFileName=${product.home}/logs/filesvc.log
log4j.appender.R.RollingPolicy.FileNamePattern=${product.home}/logs/filesvc.log.%d{yyyyMMdd-HHmmss}.gz

log4j.appender.P=org.apache.log4j.rolling.RollingFileAppender
log4j.appender.P.layout=com.netflix.logging.log4jAdapter.NFPatternLayout
log4j.appender.P.layout.ConversionPattern=%d{ISO8601} %m%n
log4j.appender.P.TriggeringPolicy=org.apache.log4j.rolling.SizeBasedTriggeringPolicy
log4j.appender.P.TriggeringPolicy.MaxFileSize=52428800
log4j.appender.P.RollingPolicy=com.emc.storageos.management.jmx.logging.TimeWindowRollingPolicy
log4j.appender.P.RollingPolicy.ActiveFileName=${product.home}/logs/filesvc-perf-counter.log
log4j.appender.P.RollingPolicy.FileNamePattern=${product.home}/logs/filesvc-perf-counter.log.%d{yyyyMMdd-HHmmss}.gz

log4j.appender.E=org.apache.log4j.rolling.RollingFileAppender
log4j.appender.E.layout=com.netflix.logging.log4jAdapter.NFPatternLayout
log4j.appender.E.layout.ConversionPattern=%d{ISO8601} [%t] %5p  %F (line %L) %m%n
log4j.appender.E.Threshold=error
log4j.appender.E.TriggeringPolicy=org.apache.log4j.rolling.SizeBasedTriggeringPolicy
log4j.appender.E.TriggeringPolicy.MaxFileSize=52428800
log4j.appender.E.RollingPolicy=com.emc.storageos.management.jmx.logging.TimeWindowRollingPolicy
log4j.appender.E.RollingPolicy.ActiveFileName=${product.home}/logs/filesvc-error.log
log4j.appender.E.RollingPolicy.FileNamePattern=${product.home}/logs/filesvc-error.log.%d{yyyyMMdd-HHmmss}.gz

# convert to asynchronous appender
log4j.logger.asyncAppenders=INFO,R,P,E

#configure blitz4j batchers to handle log storms
batcher.com.netflix.blitz4j.AsyncAppender.R.batch.maxMessages=300
batcher.com.netflix.blitz4j.AsyncAppender.P.batch.maxMessages=300
batcher.com.netflix.blitz4j.AsyncAppender.E.batch.maxMessages=300


batcher.com.netflix.blitz4j.AsyncAppender.R.maxThreads=9
batcher.com.netflix.blitz4j.AsyncAppender.P.maxThreads=9
batcher.com.netflix.blitz4j.AsyncAppender.E.maxThreads=9
